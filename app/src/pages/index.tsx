import { useEffect, useRef, Suspense } from 'react'
import { gsap } from 'gsap'
import { Canvas, useFrame } from '@react-three/fiber'
import { useGLTF } from '@react-three/drei'
import { DebugLayerMaterial as LayerMaterial, Depth, Fresnel } from 'lamina'
import { useControls } from 'leva'
import type { NextPage } from 'next'
import Head from 'next/head'
import './Home.css'

const ReactModel = (props) => {
  const { nodes } = useGLTF('/react-transformed.glb')

  const ref = useRef<any>()
  const obj = useRef<any>()

  const { gradient } = useControls({
    gradient: { value: 0.38, min: 0, max: 1 }
  })

  useFrame((state) => {
    const time = state.clock.elapsedTime
    const sin = Math.sin(time / 2)
    const cos = Math.cos(time / 2)
    ref.current.layers[0].origin.set(cos / 2, 0, 0)
    ref.current.layers[1].origin.set(cos, sin, cos)
    ref.current.layers[2].origin.set(sin, cos, sin)
    ref.current.layers[3].origin.set(cos, sin, cos)
    obj.current.rotation.x = Math.cos(time / 4) / 2
    obj.current.rotation.y = Math.sin(time / 2) / 2
    obj.current.rotation.z = Math.sin(time / 1.5) / 20
    obj.current.position.y = Math.sin(time / 1.5) / 10
  })

  return (
    <mesh
      {...props}
      ref={obj}
      geometry={nodes.react.geometry}
      scale={[1, 1, 0.5]}>
      <LayerMaterial ref={ref} toneMapped={false}>
        <Depth
          colorA="#ff0080"
          colorB="black"
          alpha={1}
          mode="normal"
          near={0.5 * gradient}
          far={0.5}
          origin={[0, 0, 0]}
        />
        <Depth
          colorA="blue"
          colorB="#f7b955"
          alpha={1}
          mode="add"
          near={2 * gradient}
          far={2}
          origin={[0, 1, 1]}
        />
        <Depth
          colorA="green"
          colorB="#f7b955"
          alpha={1}
          mode="add"
          near={3 * gradient}
          far={3}
          origin={[0, 1, -1]}
        />
        <Depth
          colorA="white"
          colorB="red"
          alpha={1}
          mode="overlay"
          near={1.5 * gradient}
          far={1.5}
          origin={[1, -1, -1]}
        />
        <Fresnel
          mode="add"
          color="white"
          intensity={0.5}
          power={1.5}
          bias={0.05}
        />
      </LayerMaterial>
    </mesh>
  )
}
const Home: NextPage = () => {
  const grid = useRef<HTMLDivElement>(null)
  const q = gsap.utils.selector(grid)

  useEffect(() => {
    gsap.to(q('.card'), {
      opacity: 1,
      stagger: 0.1,
      y: 0,
      duration: 1,
      ease: 'power2.inOut'
    })
  }, [])

  return (
    <div className="container">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="main">
        <section className="render">
          <Canvas linear flat camera={{ zoom: 6 }}>
            <Suspense fallback={null}>
              <ReactModel />
            </Suspense>
          </Canvas>
        </section>
        <h1 className="title">
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className="description">
          Get started by editing <code className="code">pages/index.tsx</code>
        </p>

        <div className="grid" ref={grid}>
          <a href="https://nextjs.org/docs" className="card">
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className="card">
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/master/examples"
            className="card">
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className="card">
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>
    </div>
  )
}

export default Home
